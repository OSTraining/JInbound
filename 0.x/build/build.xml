<?xml version="1.0" encoding="UTF-8"?>
<!--
###################################################################
# Builder script for JInbound+
#
# @version      $Id: build.xml 1473 2010-06-15 22:25:16Z silianacom-svn $
# @copyright    Copyright (C) 2009 Yannick Gaultier. All rights reserved.
# @copyright    Copyright (C) 2011 Anything Digital. All rights reserved.
# @license      GNU/GPL
###################################################################
-->
<project name="jinbound" default="dist" basedir=".">
	<property file="config.ini" />
	<property file="config.local.ini" />
	
	<!-- <target name="dist" depends="init,copyFiles,promptUser,doChangelog,cleanprev,zipFiles,deldir,info" /> -->
	<target name="dist" depends="init,copyFiles,promptUser,doChangelog,cleanprev,zipFiles,deldir,info" />
	<target name="init">

		<!-- update marker in xml file for correct display of build number -->
		<buildnumber />

		<!-- temporary dirs used for search/replace operations -->
		<mkdir dir="${cfg.packages}/temp" />
		<mkdir dir="${cfg.packages}/temp/packages" />
		<mkdir dir="${cfg.packages}/temp/staging" />
		<mkdir dir="${cfg.packages}/temp/staging/component" />
		<mkdir dir="${cfg.packages}/temp/staging/modules" />
		<mkdir dir="${cfg.packages}/temp/staging/modules/mod_jinbound_cta" />
		<mkdir dir="${cfg.packages}/temp/staging/modules/mod_jinbound_form" />
		<mkdir dir="${cfg.packages}/temp/staging/modules/mod_jinbound_social_bookmark" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/content" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/system" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/captcha" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/files" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/mailchimp" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/analytics" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/acymailing" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/salesforce" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/registration" />
		<mkdir dir="${cfg.packages}/temp/staging/plugins/user" />
		<mkdir dir="${cfg.packages}/temp/staging/template" />
		
		<!-- calculate version strings -->
		<condition property="str.versionforxml" value="${cfg.version}.${build.number}${cfg.versionsuffix}" else="${cfg.version}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.versioncaptchaforxml" value="${cfg.version.captcha}.${build.number}${cfg.versionsuffix}" else="${cfg.version.captcha}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.versionfilesforxml" value="${cfg.version.files}.${build.number}${cfg.versionsuffix}" else="${cfg.version.files}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.versionmailchimpforxml" value="${cfg.version.mailchimp}.${build.number}${cfg.versionsuffix}" else="${cfg.version.mailchimp}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.versionacymailingforxml" value="${cfg.version.acymailing}.${build.number}${cfg.versionsuffix}" else="${cfg.version.acymailing}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.versionanalyticsforxml" value="${cfg.version.analytics}.${build.number}${cfg.versionsuffix}" else="${cfg.version.analytics}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.versionsalesforceforxml" value="${cfg.version.salesforce}.${build.number}${cfg.versionsuffix}" else="${cfg.version.salesforce}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.versionregistrationforxml" value="${cfg.version.registration}.${build.number}${cfg.versionsuffix}" else="${cfg.version.registration}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.version.module.cta" value="${cfg.version.module.cta}.${build.number}${cfg.versionsuffix}" else="${cfg.version.module.cta}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<condition property="str.version.module.form" value="${cfg.version.module.form}.${build.number}${cfg.versionsuffix}" else="${cfg.version.module.form}${cfg.versionsuffix}">
			<istrue value="${cfg.addbuildtoversion}" />
		</condition>
		<tstamp>
			<format property="str.datefmt" pattern="${cfg.datefmt}" locale="${cfg.dateloc}" />
		</tstamp>
		
		<!-- build up various strings -->
		<condition property="str.build" value="${cfg.buildprefix}${build.number}" else="">
			<istrue value="${cfg.addbuild}" />
		</condition>
		<condition property="str.version" value="${cfg.versionprefix}${cfg.version}" else="${cfg.version}">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.version.captcha" value="${cfg.versionprefix}${cfg.version.captcha}" else="${cfg.version.captcha}">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.version.files" value="${cfg.versionprefix}${cfg.version.files}" else="${cfg.version.files}">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.version.mailchimp" value="${cfg.versionprefix}${cfg.version.mailchimp}" else="${cfg.version.mailchimp}">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.version.acymailing" value="${cfg.versionprefix}${cfg.version.acymailing}" else="${cfg.version.acymailing}">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.version.analytics" value="${cfg.versionprefix}${cfg.version.analytics}" else="${cfg.version.analytics}">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.version.salesforce" value="${cfg.versionprefix}${cfg.version.salesforce}" else="${cfg.version.salesforce}">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.version.registration" value="${cfg.versionprefix}${cfg.version.registration}" else="${cfg.version.registration}">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.date" value="_${str.datefmt}" else="">
			<istrue value="${cfg.adddate}" />
		</condition>
		<property name="str.pkg.filename" value="${cfg.pfx.pkg}J25_J3x_${cfg.name}_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.pkg.file" value="${cfg.packages}/current/${str.pkg.filename}" />
		<property name="str.com.filename" value="${cfg.pfx.com}${cfg.name}_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.com.file" value="${cfg.packages}/temp/packages/${str.com.filename}" />
		<property name="str.tpl.filename" value="${cfg.pfx.tpl}${cfg.name}_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.tpl.file" value="${cfg.packages}/temp/packages/${str.tpl.filename}" />
		<property name="str.plg.content.filename" value="${cfg.pfx.plg}content_${cfg.name}_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.content.file" value="${cfg.packages}/temp/packages/${str.plg.content.filename}" />
		<property name="str.plg.sys.filename" value="${cfg.pfx.plg}system_${cfg.name}_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.sys.file" value="${cfg.packages}/temp/packages/${str.plg.sys.filename}" />
		<property name="str.plg.sys.captcha.filename" value="${cfg.pfx.plg}system_${cfg.name}captcha_${str.version.captcha}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.sys.captcha.file" value="${cfg.packages}/current/${str.plg.sys.captcha.filename}" />
		<property name="str.plg.sys.files.filename" value="${cfg.pfx.plg}system_${cfg.name}files_${str.version.files}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.sys.files.file" value="${cfg.packages}/current/${str.plg.sys.files.filename}" />
		<property name="str.plg.sys.mailchimp.filename" value="${cfg.pfx.plg}system_${cfg.name}mailchimp_${str.version.mailchimp}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.sys.mailchimp.file" value="${cfg.packages}/current/${str.plg.sys.mailchimp.filename}" />
		<property name="str.plg.sys.analytics.filename" value="${cfg.pfx.plg}system_${cfg.name}analytics_${str.version.analytics}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.sys.analytics.file" value="${cfg.packages}/current/${str.plg.sys.analytics.filename}" />
		<property name="str.plg.sys.acymailing.filename" value="${cfg.pfx.plg}system_${cfg.name}acymailing_${str.version.acymailing}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.sys.acymailing.file" value="${cfg.packages}/current/${str.plg.sys.acymailing.filename}" />
		<property name="str.plg.sys.salesforce.filename" value="${cfg.pfx.plg}system_${cfg.name}salesforce_${str.version.salesforce}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.sys.salesforce.file" value="${cfg.packages}/current/${str.plg.sys.salesforce.filename}" />
		<property name="str.plg.sys.registration.filename" value="${cfg.pfx.plg}system_${cfg.name}registration_${str.version.registration}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.sys.registration.file" value="${cfg.packages}/current/${str.plg.sys.registration.filename}" />
		<property name="str.plg.user.filename" value="${cfg.pfx.plg}user_${cfg.name}_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.plg.user.file" value="${cfg.packages}/temp/packages/${str.plg.user.filename}" />
		<property name="str.mod.bookmark.filename" value="${cfg.pfx.mod}${cfg.name}_social_bookmark_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.mod.bookmark.file" value="${cfg.packages}/temp/packages/${str.mod.bookmark.filename}" />
		<property name="str.mod.cta.filename" value="${cfg.pfx.mod}${cfg.name}_cta_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.mod.cta.file" value="${cfg.packages}/current/${str.mod.cta.filename}" />
		<property name="str.mod.form.filename" value="${cfg.pfx.mod}${cfg.name}_form_${str.version}.${str.build}${cfg.versionsuffix}${str.date}" />
		<property name="str.mod.form.file" value="${cfg.packages}/current/${str.mod.form.filename}" />
		
		<!-- perform filtering -->
		<filter token="ant_version_number" value="${str.versionforxml}" />
		<filter token="ant_captcha_version_number" value="${str.versioncaptchaforxml}" />
		<filter token="ant_files_version_number" value="${str.versionfilesforxml}" />
		<filter token="ant_mailchimp_version_number" value="${str.versionmailchimpforxml}" />
		<filter token="ant_acymailing_version_number" value="${str.versionacymailingforxml}" />
		<filter token="ant_salesforce_version_number" value="${str.versionsalesforceforxml}" />
		<filter token="ant_registration_version_number" value="${str.versionregistrationforxml}" />
		<filter token="ant_module_cta_version_number" value="${str.version.module.cta}" />
		<filter token="ant_current_date" value="${str.datefmt}" />
		<filter token="ant_copyright_header" value="${cfg.copyright}" />
		<filter token="ant_component_id" value="${cfg.pfx.com}${cfg.name}" />
		<filter token="ant_component_package" value="${str.com.filename}.zip" />
		<filter token="ant_template_id" value="${cfg.name}" />
		<filter token="ant_template_package" value="${str.tpl.filename}.zip" />
		<filter token="ant_plugin_content_id" value="${cfg.name}" />
		<filter token="ant_plugin_content_package" value="${str.plg.content.filename}.zip" />
		<filter token="ant_plugin_system_id" value="${cfg.name}" />
		<filter token="ant_plugin_system_package" value="${str.plg.sys.filename}.zip" />
		<filter token="ant_plugin_user_id" value="${cfg.name}" />
		<filter token="ant_plugin_user_package" value="${str.plg.user.filename}.zip" />
		<filter token="ant_module_bookmark_id" value="${cfg.pfx.mod}${cfg.name}_social_bookmark" />
		<filter token="ant_module_bookmark_package" value="${str.mod.bookmark.filename}.zip" />
	
		<condition property="do.zip">
			<istrue value="${cfg.zip}" />
		</condition>

		<!-- Init of changelog automatic build up -->
		<property name="git.title" value="JInbound Changelog" />
		<property name="git.title.analytics" value="JInbound Analytics Plugin Changelog" />
		<property name="git.title.acymailing" value="JInbound Acymailing Plugin Changelog" />
		<property name="git.title.captcha" value="JInbound Captcha Plugin Changelog" />
		<property name="git.title.files" value="JInbound Files Plugin Changelog" />
		<property name="git.title.mailchimp" value="JInbound MailChimp Plugin Changelog" />
		<property name="git.title.salesforce" value="JInbound Salesforce Plugin Changelog" />
		<property name="git.title.registration" value="JInbound Registration Plugin Changelog" />
		<property name="git.log.dir" value="${cfg.buildpath}changelog" />
		<property name="git.log.filename" value="changelog.src.log" />
		<property name="git.log.file" value="${git.log.dir}/${git.log.filename}" />
		<property name="git.log.fileoutname" value="changelog.log" />
		<property name="git.log.fileout" value="${git.log.dir}/${git.log.fileoutname}" />
		<property name="git.log.fileoutname.analytics" value="analytics.changelog.log" />
		<property name="git.log.fileout.analytics" value="${git.log.dir}/${git.log.fileoutname.analytics}" />
		<property name="git.log.fileoutname.acymailing" value="acymailing.changelog.log" />
		<property name="git.log.fileout.acymailing" value="${git.log.dir}/${git.log.fileoutname.acymailing}" />
		<property name="git.log.fileoutname.captcha" value="captcha.changelog.log" />
		<property name="git.log.fileout.captcha" value="${git.log.dir}/${git.log.fileoutname.captcha}" />
		<property name="git.log.fileoutname.files" value="files.changelog.log" />
		<property name="git.log.fileout.files" value="${git.log.dir}/${git.log.fileoutname.files}" />
		<property name="git.log.fileoutname.mailchimp" value="mailchimp.changelog.log" />
		<property name="git.log.fileout.mailchimp" value="${git.log.dir}/${git.log.fileoutname.mailchimp}" />
		<property name="git.log.fileoutname.salesforce" value="salesforce.changelog.log" />
		<property name="git.log.fileout.salesforce" value="${git.log.dir}/${git.log.fileoutname.salesforce}" />
		<property name="git.log.fileoutname.registration" value="registration.changelog.log" />
		<property name="git.log.fileout.registration" value="${git.log.dir}/${git.log.fileoutname.registration}" />
		
		<property name="git.rootDir" value="/home/jeff/git/jinbound/0.x/src/" />
		<property name="git.buildDir" value="/home/jeff/git/jinbound/0.x/build/" />
		<property name="git.user" value="AnythingDig" />
		<property name="git.repo" value="jinbound" />

		<property name="ext.targetFile" value="${git.rootDir}/changelog.log" />
	</target>
	
	<target name="copyFiles">
		<!-- start filtering (ALL media will be in /media so we're ok to filter ALL the files!) -->
		<copy todir="${cfg.packages}/temp/staging/component" filtering="true">
			<fileset
				dir="${cfg.dir}/${cfg.pfx.com}${cfg.name}"
				includes="${cfg.name}.xml,${cfg.name}.install.php,admin/,language/,site/"
				excludes="admin/liveupdate/,**.git"
			/>
		</copy>
		<copy todir="${cfg.packages}/temp/staging/component/admin" filtering="false">
			<fileset
				dir="${cfg.dir}/${cfg.pfx.com}${cfg.name}/admin"
				includes="liveupdate/"
				excludes="**.git"
			/>
		</copy>
		<mkdir dir="${cfg.packages}/temp/staging/component/media" />
		<copy todir="${cfg.packages}/temp/staging/component/media" filtering="true">
			<fileset
				dir="${cfg.dir}/${cfg.pfx.com}${cfg.name}/media"
				includes="index.html,css/,js/"
				excludes="**.git"
			/>
		</copy>
		<copy todir="${cfg.packages}/temp/staging/component/media" filtering="false">
			<fileset
				dir="${cfg.dir}/${cfg.pfx.com}${cfg.name}/media"
				includes="images/,bootstrap/,jqplot/,ui/"
				excludes="**.git,jqplot/jquery.js,jqplot/jquery.min.js,jqplot/test.html"
			/>
		</copy>
		<!-- now read xml file (the one in temp directory, after search/replace operation -->
		<xmlproperty file="${cfg.packages}/temp/staging/component/${cfg.name}.xml" collapseAttributes="true" prefix="xml" keepRoot="false" />

		<!-- template -->
		<copy todir="${cfg.packages}/temp/staging/template" filtering="true">
			<fileset
				dir="${cfg.dir}/${cfg.pfx.tpl}${cfg.name}"
				includes="templateDetails.xml,index.php,index.html,language/,css/"
				excludes="**.git"
			/>
		</copy>
		
		<!-- module -->
		<copy todir="${cfg.packages}/temp/staging/modules/${cfg.pfx.mod}${cfg.name}_social_bookmark" filtering="true">
			<fileset
				dir="${cfg.dir}/modules/${cfg.pfx.mod}${cfg.name}_social_bookmark"
				includes="${cfg.pfx.mod}${cfg.name}_social_bookmark.php,${cfg.pfx.mod}${cfg.name}_social_bookmark.xml,index.html,css/"
				excludes="**.git"
			/>
		</copy>
		<copy todir="${cfg.packages}/temp/staging/modules/${cfg.pfx.mod}${cfg.name}_social_bookmark" filtering="false">
			<fileset
				dir="${cfg.dir}/modules/${cfg.pfx.mod}${cfg.name}_social_bookmark"
				includes="icons/"
				excludes="**.git"
			/>
		</copy>
		
		<!-- cta module -->
		<copy todir="${cfg.packages}/temp/staging/modules/${cfg.pfx.mod}${cfg.name}_cta" filtering="true">
			<fileset
				dir="${cfg.dir}/modules/${cfg.pfx.mod}${cfg.name}_cta"
				includes="${cfg.pfx.mod}${cfg.name}_cta.php,${cfg.pfx.mod}${cfg.name}_cta.xml,adapter.php,helper.php,adapters/,fields/,language/,media/,tmpl/"
				excludes="**.git"
			/>
		</copy>
		
		<!-- form module -->
		<copy todir="${cfg.packages}/temp/staging/modules/${cfg.pfx.mod}${cfg.name}_form" filtering="true">
			<fileset
				dir="${cfg.dir}/modules/${cfg.pfx.mod}${cfg.name}_form"
				includes="${cfg.pfx.mod}${cfg.name}_form.php,${cfg.pfx.mod}${cfg.name}_form.xml,language/,tmpl/"
				excludes="**.git"
			/>
		</copy>

		<!-- content plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/content" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/content/${cfg.name}"
				includes="${cfg.name}.xml,${cfg.name}.php,index.html,language/"
				excludes="**.git"
			/>
		</copy>

		<!-- system plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/system" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/system/${cfg.name}"
				includes="${cfg.name}.xml,${cfg.name}.php,index.html,language/"
				excludes="**.git"
			/>
		</copy>

		<!-- captcha plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/captcha" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/system/${cfg.name}captcha"
				includes="${cfg.name}captcha.xml,${cfg.name}captcha.php,field/,liveupdate/,tmpl/,language/"
				excludes="**.git"
			/>
		</copy>

		<!-- files plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/files" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/system/${cfg.name}files"
				includes="${cfg.name}files.xml,${cfg.name}files.php,field/,liveupdate/,tmpl/,language/"
				excludes="**.git"
			/>
		</copy>

		<!-- mailchimp plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/mailchimp" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/system/${cfg.name}mailchimp"
				includes="${cfg.name}mailchimp.xml,${cfg.name}mailchimp.php,${cfg.name}mailchimp.install.php,field/,form/,language/,library/,liveupdate/"
				excludes="**.git"
			/>
		</copy>
		
		<!-- acymailing plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/acymailing" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/system/${cfg.name}acymailing"
				includes="${cfg.name}acymailing.xml,${cfg.name}acymailing.php,${cfg.name}acymailing.install.php,field/,form/,helper/,language/,liveupdate/"
				excludes="**.git"
			/>
		</copy>
		
		<!-- salesforce plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/salesforce" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/system/${cfg.name}salesforce"
				includes="${cfg.name}salesforce.xml,${cfg.name}salesforce.php,${cfg.name}salesforce.install.php,field/,form/,language/,library/,liveupdate/,wsdl/"
				excludes="**.git"
			/>
		</copy>
		
		<!-- registration plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/registration" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/system/${cfg.name}registration"
				includes="${cfg.name}registration.xml,${cfg.name}registration.php,${cfg.name}registration.install.php,field/,language/,liveupdate/"
				excludes="**.git"
			/>
		</copy>

		<!-- analytics plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/analytics" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/system/${cfg.name}analytics"
				includes="${cfg.name}analytics.xml,${cfg.name}analytics.php,field/,form/,liveupdate/,language/"
				excludes="**.git"
			/>
		</copy>

		<!-- user plugin -->
		<copy todir="${cfg.packages}/temp/staging/plugins/user" filtering="true">
			<fileset
				dir="${cfg.dir}/plugins/user/${cfg.name}"
				includes="${cfg.name}.xml,${cfg.name}.php,index.html,forms/,language/"
				excludes="**.git"
			/>
		</copy>
		
		<!-- filter package manifest -->
		<copy todir="${cfg.packages}/temp/staging" filtering="true">
			<fileset dir="${cfg.dir}" includes="${cfg.pfx.pkg}${cfg.name}.xml,${cfg.name}.install.php,language/" />
		</copy>
	</target>

	<!-- prompt user if need to rebuild changelog - useful when not online, as would -->
	<!-- make whole build process fail otherwise -->
	<target name="promptUser">
		<input message="Build changelogs (needs be online) (y/n)?" validargs="y,n" addproperty="do.buildchangelog" />
		<condition property="do.changelog">
			<equals arg1="y" arg2="${do.buildchangelog}" />
		</condition>
	</target>


	<!-- Automatic changelog from svn commits comments -->
	<target name="doChangelog" if="do.changelog">
		<echo message="Building    | ${git.title}" />
		<echo message="File        | ${git.log.file}" />
		<echo message="Output      | ${git.log.fileout}" />
		<echo message="--------------------------------------------" />
		
		<echo>Making changelog ...</echo>
		<mkdir dir="${cfg.buildpath}changelog" />
		<echo>Created destination dir</echo>
		
		<echo>Fetching issues ...</echo>
		<input message="GitHub password for user ${cfg.git.username}" addproperty="git.password">
		</input>

		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logfetch.php --user="${git.user}" --repo="${git.repo}" --username="${cfg.git.username}" --password="${git.password}"' />
		</exec>
		<echo>Raw data fetched from repository</echo>
		
		<!-- use php logformat script to format log file-->
		<echo>Spawning logformat script using ${cfg.php.bin}</echo>
		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logformat.php --title="${git.title}" --build=${build.number}' />
		</exec>
		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logformat.php --title="${git.title.captcha}" --build=${build.number} --target="${git.log.fileout.captcha}" --milestone_prefix="captcha "' />
		</exec>
		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logformat.php --title="${git.title.files}" --build=${build.number} --target="${git.log.fileout.files}" --milestone_prefix="files "' />
		</exec>
		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logformat.php --title="${git.title.mailchimp}" --build=${build.number} --target="${git.log.fileout.mailchimp}" --milestone_prefix="mailchimp "' />
		</exec>
		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logformat.php --title="${git.title.acymailing}" --build=${build.number} --target="${git.log.fileout.acymailing}" --milestone_prefix="acymailing "' />
		</exec>
		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logformat.php --title="${git.title.salesforce}" --build=${build.number} --target="${git.log.fileout.salesforce}" --milestone_prefix="salesforce "' />
		</exec>
		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logformat.php --title="${git.title.registration}" --build=${build.number} --target="${git.log.fileout.registration}" --milestone_prefix="registration "' />
		</exec>
		<exec executable="${cfg.php.bin}">
			<arg line=' changelog/logformat.php --title="${git.title.analytics}" --build=${build.number} --target="${git.log.fileout.analytics}" --milestone_prefix="analytics "' />
		</exec>
		<echo>Raw git log processed</echo>
		
		<!-- Copy changelog to extension dir -->
		<copy file="${git.log.fileout}" tofile="${ext.targetFile}" />
		<echo message="Done ---------------------------------------" />
	</target>
	
	<target name="cleanprev">
		<!-- move current build to ../previous directory -->
		<move todir="${cfg.packages}/previous">
			<fileset dir="${cfg.packages}/current" includes="*.zip" />
		</move>
	</target>
	
	<target name="zipFiles" depends="mkdir">
		<echo message="Building    | ${str.pkg.file}.zip" />
		<echo message="xml file    | ${cfg.dir}/${cfg.pfx.com}${cfg.name}/${cfg.name}.xml" />
		<echo message="xml version | ${str.version}" />
		<echo message="target      | Joomla" />
		<echo message="--------------------------------------------" />
		<echo message="    o base dir  - ${cfg.dir}" />
		<echo message="    o unver dir - ${cfg.unver}" />
		<echo message="--------------------------------------------" />
		
		<!-- create zip and include all files needed -->

		<!-- files with updated build and date number -->
		<zip destfile="${str.com.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/component" excludes="" />
		</zip>
		<zip destfile="${str.tpl.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/template" excludes="" />
		</zip>
		<zip destfile="${str.plg.content.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/content" excludes="" />
		</zip>
		<zip destfile="${str.plg.sys.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/system" excludes="" />
		</zip>
		
		<zip destfile="${str.plg.sys.captcha.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/captcha" excludes="" />
		</zip>
		<zip destfile="${str.plg.sys.captcha.file}.zip" update="true">
			<zipfileset dir="${git.log.dir}" includes="${git.log.fileoutname.captcha}" />
		</zip>
		
		<zip destfile="${str.plg.sys.files.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/files" excludes="" />
		</zip>
		<zip destfile="${str.plg.sys.files.file}.zip" update="true">
			<zipfileset dir="${git.log.dir}" includes="${git.log.fileoutname.files}" />
		</zip>
		
		<zip destfile="${str.plg.sys.mailchimp.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/mailchimp" excludes="" />
		</zip>
		<zip destfile="${str.plg.sys.mailchimp.file}.zip" update="true">
			<zipfileset dir="${git.log.dir}" includes="${git.log.fileoutname.mailchimp}" />
		</zip>
		
		<zip destfile="${str.plg.sys.acymailing.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/acymailing" excludes="" />
		</zip>
		<zip destfile="${str.plg.sys.acymailing.file}.zip" update="true">
			<zipfileset dir="${git.log.dir}" includes="${git.log.fileoutname.acymailing}" />
		</zip>
		
		<zip destfile="${str.plg.sys.salesforce.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/salesforce" excludes="" />
		</zip>
		<zip destfile="${str.plg.sys.salesforce.file}.zip" update="true">
			<zipfileset dir="${git.log.dir}" includes="${git.log.fileoutname.salesforce}" />
		</zip>
		
		<zip destfile="${str.plg.sys.registration.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/registration" excludes="" />
		</zip>
		<zip destfile="${str.plg.sys.registration.file}.zip" update="true">
			<zipfileset dir="${git.log.dir}" includes="${git.log.fileoutname.registration}" />
		</zip>
		
		<zip destfile="${str.plg.sys.analytics.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/analytics" excludes="" />
		</zip>
		<zip destfile="${str.plg.sys.analytics.file}.zip" update="true">
			<zipfileset dir="${git.log.dir}" includes="${git.log.fileoutname.analytics}" />
		</zip>
		
		<zip destfile="${str.plg.user.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/plugins/user" excludes="" />
		</zip>
		
		<zip destfile="${str.mod.bookmark.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/modules/mod_jinbound_social_bookmark" excludes="" />
		</zip>
		
		<zip destfile="${str.mod.cta.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/modules/mod_jinbound_cta" excludes="" />
		</zip>
		
		<zip destfile="${str.mod.form.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp/staging/modules/mod_jinbound_form" excludes="" />
		</zip>
		
		<!-- create pkg -->
		<zip destfile="${str.pkg.file}.zip" update="false">
			<zipfileset dir="${cfg.packages}/temp" includes="packages/" />
		</zip>
		<zip destfile="${str.pkg.file}.zip" update="true">
			<zipfileset dir="${cfg.packages}/temp/staging" includes="${cfg.pfx.pkg}${cfg.name}.xml,${cfg.name}.install.php,language/" />
		</zip>
		<zip destfile="${str.pkg.file}.zip" update="true">
			<zipfileset dir="${git.rootDir}" includes="changelog.log" />
		</zip>
	</target>
	
	<!-- create target directory if does not exist -->
	<target name="mkdir">
		<mkdir dir="${cfg.packages}" />
	</target>

	<!-- delete temp dirs -->
	<target name="deldir">
		<delete dir="${cfg.packages}/temp" />
	</target>

	<!-- display information -->
	<target name="info" depends="init">
		<echo message="Ant Version: ${ant.version}" />
		<echo message="Project:     ${cfg.name}" />
		<echo message="Version:     ${xml.version}" />
		<echo message="Build:       ${build.number}" />
		<echo message="Date:        ${TODAY}" />
	</target>
</project>